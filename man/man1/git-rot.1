.TH GIT-ROT 1 "24 November, 2022" "Gitz 1.3.0" "Gitz Manual"

.SH NAME
git-rot - Rotate through branches in a Git repository

.SH SYNOPSIS
.sp
.nf
.ft C
git rot [-h] [-q] [-v] [-n] [rotate]
.ft P
.fi


.SH DESCRIPTION
Move through the branches in a Git repository in the order
given by the \fBgit branch\fP command, wrapping around at the end.

.sp
If N is a number, \fBgit\-rotate N\fP rotates N branches forward,
and \fBgit\-rotate \-N\fP rotates N branches backward.

.sp
\fBgit\-rotate\fP on its own rotates one branch forward, and
\fBgit\-rotate \-\fP rotates one branch backward.

.sp
If N is a string, \fBgit\-rotate <prefix>\fP rotates through all branches
starting with that string.

.sp
\fBgit\-rotate ma\fP will rotate through all branches starting with ma

.sp

.sp
Useful for quickly browsing each branch in a repository one at a time.

.SH OPTIONS
\fB\-h, \-\-help\fP: show this help message and exit

\fB\-q, \-\-quiet\fP: Suppress all output

\fB\-v, \-\-verbose\fP: Report all messages in great detail

\fB\-n, \-\-no\-run\fP: If set, commands will be printed but not executed


\fBrotate\fP: Number of steps to rotate (positive or negative), or a string prefix to match.


.SH EXAMPLES
.TP
.B \fB git rotate \fP
.TP
.B \fB git rotate 1 \fP
.TP
.B \fB git rotate + \fP
Rotates to the next branch

.sp
.TP
.B \fB git rotate 3 \fP
.TP
.B \fB git rotate +3 \fP
Rotates 3 branches ahead

.sp
.TP
.B \fB git rotate \-1 \fP
.TP
.B \fB git rotate \- \fP
Rotates 1 branch backward

.sp
.TP
.B \fB git rotate \-2 \fP
Rotates 2 branches backward

