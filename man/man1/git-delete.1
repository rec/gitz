.TH GIT-DELETE 1 "24 November, 2022" "Gitz 1.3.0" "Gitz Manual"

.SH NAME
git-delete - Delete one or more branches locally and remotely

.SH SYNOPSIS
.sp
.nf
.ft C
git delete [-h] [-q] [-v] [--protected] [-n] target [target ...]
.ft P
.fi


.SH DESCRIPTION
Delete each branch specified together with its remote branch.

.sp
By default, branches named \fBmain\fP, \fBmaster\fP and \fBdevelop\fP are protected,
which means they cannot be deleted.

.sp
Using the \-\-protected/\-p flag allows protected branches to be deleted.

.sp
It's also possible to change which branches are protected by setting
the environment variable GITZ_PROTECTED_BRANCHES to a list of
branches separated by colons, or to an empty string to turn off
protection entirely.

.sp
The special branch name \fB.\fP means the current branch.

.SH OPTIONS
\fB\-h, \-\-help\fP: show this help message and exit

\fB\-q, \-\-quiet\fP: Suppress all output

\fB\-v, \-\-verbose\fP: Report all messages in great detail

\fB\-\-protected\fP: Delete all, even protected remotes or branches

\fB\-n, \-\-no\-run\fP: If set, commands will be printed but not executed


\fBtarget\fP: 


.SH DANGER
Deletes remote branches!

.SH EXAMPLES
.TP
.B \fB git delete foo bar \fP
Delete the branches foo and bar locally and remotely

