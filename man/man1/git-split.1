.TH GIT-SPLIT 1 "24 November, 2022" "Gitz 1.3.0" "Gitz Manual"

.SH NAME
git-split - Split a range of commits into many single-file commits

.SH SYNOPSIS
.sp
.nf
.ft C
git split [-h] [-q] [-v] [-p PREFIX] [commit]
.ft P
.fi


.SH DESCRIPTION
\fBgit split\fP squashes together a range of commits and the staging area, then
splits out a sequence of individual commits, one for each file changed.

.SH OPTIONS
\fB\-h, \-\-help\fP: show this help message and exit

\fB\-q, \-\-quiet\fP: Suppress all output

\fB\-v, \-\-verbose\fP: Report all messages in great detail

\fB\-p PREFIX, \-\-prefix PREFIX\fP: Prefix for each commit message


\fBcommit\fP: Optional commit ID to split from


.SH DANGER
Rewrites history!

.SH EXAMPLES
.TP
.B \fB git split \fP
Split the staging area if it's not empty, otherwise HEAD

.sp
.TP
.B \fB git split HEAD \fP
Split the squash of the staging area and HEAD

.sp
.TP
.B \fB git split HEAD~ \fP
Split the squash of the staging area, HEAD and HEAD~

