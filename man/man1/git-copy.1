.TH GIT-COPY 1 "24 November, 2022" "Gitz 1.3.0" "Gitz Manual"

.SH NAME
git-copy - Copy a git branch locally and remotely

.SH SYNOPSIS
.sp
.nf
.ft C
git copy [-h] [-q] [-v] [-p] [-f] [-n] source [target]
.ft P
.fi


.SH DESCRIPTION
Copy one branch to another, both locally and in remote
branches.  If no source branch is given, the current branch is
used.

.sp
By default, the branches \fBmain\fP, \fBmaster\fP and \fBdevelop\fP, which means that they
are not allowed to be copied over to.

.sp
Using the \-\-all/\-a flag allows protected branches to be copied.

.sp
It's also possible to override the protected branches by setting the
environment variable GITZ_PROTECTED_BRANCHES to a list separated by colons,
or an empty string for no protection.

.SH OPTIONS
\fB\-h, \-\-help\fP: show this help message and exit

\fB\-q, \-\-quiet\fP: Suppress all output

\fB\-v, \-\-verbose\fP: Report all messages in great detail

\fB\-p, \-\-protected\fP: Copy all, even protected remotes or branches (use \-protected to override)

\fB\-f, \-\-force\fP: Force copy over existing branches

\fB\-n, \-\-no\-run\fP: If set, commands will be printed but not executed


\fBsource\fP: 

\fBtarget\fP: 


.SH DANGER
Changes remote branches!

.SH EXAMPLES
.TP
.B \fB git copy old new \fP
Copy the branch "old" to "new", both locally and the remote
repository.

.sp
Fails if "new" exists locally or in the remote repositories.

.sp
.TP
.B \fB git copy \-a old new \fP
.TP
.B \fB git copy \-\-all old new \fP
Copy the branch "old" to "new", both locally and on the
remote repository, even protected branches or repositories.

.sp
Fails if "new" exists locally or in the remote repositories.

.sp
.TP
.B \fB git copy \-f old new \fP
.TP
.B \fB git copy \-\-force old new \fP
Copy the branch "old" to "new", both locally and on the upstream
remote repository.

.sp
Overwrites "new" if it exists locally or in the remote repository.

